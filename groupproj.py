# -*- coding: utf-8 -*-
"""groupproj.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NABfMlGW1zGRNdgYSF8rNN8WZ0neXbpG
"""

import pandas as pd
diabetes_data = pd.read_csv('diabetes.csv')

from sklearn.model_selection import train_test_split
X = diabetes_data.drop('Outcome', axis=1)
y = diabetes_data['Outcome']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train.values, y_train.values)

from sklearn.metrics import accuracy_score
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', accuracy)

print("Please enter your details:")
pregnancies = int(input("Number of times pregnant: "))
glucose = int(input("glucose level : "))
bloodpressure = int(input("Diastolic blood pressure (mm Hg): "))
skinthickness = int(input("Triceps skinfold thickness (mm): "))
insulin = int(input("2-Hour serum insulin (mu U/ml): "))
bmi = float(input("Body mass index: "))
dpf = float(input("Diabetes pedigree function: "))
age = int(input("Age (years): "))

# Make a prediction based on the input
input_data = [[pregnancies, glucose, bloodpressure, skinthickness, insulin, bmi, dpf, age]]
prediction = model.predict(input_data)[0]

# Print the prediction
if prediction == 0:
    print("Congratulations! You don't have diabetes.")
else:
    print("I'm sorry, but you have diabetes. Please consult a professional for further advice.")